

@mixin clearfix() {
  &:after {
    content:".";
    display:block;
    height:0;
    clear:both;
    visibility:hidden;
  }
}

@mixin border-box() {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -ms-box-sizing: border-box;
  box-sizing: border-box;
}


// Flexbox prefix mixins

// Parent container properties

@mixin display-flex() {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@mixin flex-direction-column() {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

@mixin flex-direction-row() {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

@mixin flex-wrap($property) {
  -webkit-flex-wrap: $property;
  -ms-flex-wrap: $property;
  flex-wrap: $property;
}

@mixin justify-content-space-between() {
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

// Align items (like align content) requires different properties for ms...therefore there must be separate mixins for each property...with the exception of stretch
@mixin align-items-flex-end() {
  -webkit-box-align: end;
  -webkit-align-items: flex-end;
  -ms-flex-align: end;
  align-items: flex-end;
}

@mixin align-items-flex-start() {
  -webkit-box-align: end;
  -webkit-align-items: flex-end;
  -ms-flex-align: end;
  align-items: flex-end;
}

@mixin align-items($property) {
  -webkit-box-align: $property;
  -webkit-align-items: $property;
  -ms-flex-align: $property;
  align-items: $property;
}

// Align content (like align items) requires different properties for ms...therefore there must be separate mixins for each property...with the exception of stretch
@mixin align-content-flex-end() {
  -webkit-align-content: flex-end;
  -ms-flex-line-pack: end;
  align-content: flex-end;
}

@mixin align-content($property) {
  -webkit-align-content: $property;
  -ms-flex-line-pack: $property;
  align-content: $property;
}

// Child properties

@mixin flex($value) {
  -webkit-box-flex: $value;
  -webkit-flex: $value;
  -ms-flex: $value;
  flex: $value;
}

@mixin align-self-start() {
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
}

@mixin align-self-end() {
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end;
}

@mixin flex-grow($value) {
  -webkit-box-flex: $value;
  -webkit-flex-grow: $value;
  -ms-flex-positive: $value;
  flex-grow: $value;
}

@keyframes underline-gradient { 
  0%{
    transform: translate3d(0%, 0%, 0);
  }
  100%{
    transform: translate3d(-75%, 0%, 0);
  }
}

@mixin gradient-border-top() {
    &:before {
    // background: linear-gradient(
    //   to bottom,
    //   rgba( map_get($colors, 'black'), 0.8),
    //   rgba( map_get($colors, 'black'), 0.8)
    // ) center 1.08em / 100% 2px no-repeat;

    content: "";
    height: 3px;
    left: 0;
    position: absolute;
    top: 0;
    width: 400%;
    will-change: transform;
    z-index: 1;

    animation: underline-gradient 6s linear infinite;
    background-image: linear-gradient(
      90deg, 
      rgba( map_get($colors, 'purple'), 0.8) 15%, 
      rgba( map_get($colors, 'green'), 0.6) 35%,  
      rgba( map_get($colors, 'purple'), 0.8) 85%
    );
  }
}

@mixin gradient-border-bottom() {
    &:after {
    // background: linear-gradient(
    //   to bottom,
    //   rgba( map_get($colors, 'black'), 0.8),
    //   rgba( map_get($colors, 'black'), 0.8)
    // ) center 1.08em / 100% 2px no-repeat;

    content: "";
    height: 3px;
    left: 0;
    position: absolute;
    bottom: 0;
    width: 400%;
    will-change: transform;
    z-index: 1;

    animation: underline-gradient 6s linear infinite;
    background-image: linear-gradient(
      90deg, 
      rgba( map_get($colors, 'purple'), 0.8) 15%, 
      rgba( map_get($colors, 'green'), 0.6) 35%,  
      rgba( map_get($colors, 'purple'), 0.8) 85%
    );
  }
}



// .graddynamic {
//   position: fixed;
//   top: 0;
//   bottom: 0;
//   left: 0;
//   right: 0;
//   z-index: -1;
// }

// .graddynamic:after, .graddynamic:before {
//   position: absolute;
//   top: 0;
//   left: 0;
//   width: 400%;
//   height: 400%;
//   content: "";
//   z-index: -1;
// }

// .graddynamic:after {
//   background: radial-gradient(circle, red, transparent);
//   animation: colorSpin 30s linear infinite;
// }

// .graddynamic:before {
//   background-color: yellow;
// }

// @keyframes colorSpin {
//   25% {
//     transform: translateY(-75%);
//   }
//   50% {
//     transform: translate(-75%, -75%);
//   }
//   75% {
//     transform: translate(-75%, 0);
//   }
//   100% {
//     filter: hue-rotate(360deg);
//   }
//   /*75 is obtained as 100[1- (100/(height or width written in .gradDynamic:after)). i.e. 75 = 100[1-100/400] */
// }

// Animations:

@mixin prefix-animation ($properties) {
  -webkit-animation: $properties;
  animation: $properties;
}

@mixin prefix-animation-delay ($properties) {
  -webkit-animation-delay: $properties;
  animation-delay: $properties;
}

@keyframes section-in-left {
  0% {
    opacity: 0;
    transform: translateX(-20px);
  }
  100% {
    opacity: 1;
    transform: none;
  }
}

@-webkit-keyframes section-in-left {
  0% {
    opacity: 0;
    transform: translateX(-20px);
  }
  100% {
    opacity: 1;
    transform: none;
  }
}

@keyframes text-in-left {
  0% {
    opacity: 0;
    transform: translateX(-200px);
  }
  50% {
    opacity: 0;
    transform: translateX(-50px);
  }
  100% {
    opacity: 1;
    transform: none;
  }
}

@-webkit-keyframes text-in-left {
  0% {
    opacity: 0;
    transform: translateX(-200px);
  }
  50% {
    opacity: 0;
    transform: translateX(-50px);
  }
  100% {
    opacity: 1;
    transform: none;
  }
}

@keyframes textbox-in-left {
  0% {
    opacity: 0;
    transform: translateX(-100px);
  }
  100% {
    opacity: 1;
    transform: none;
  }
}

@-webkit-keyframes textbox-in-left {
  0% {
    opacity: 0;
    transform: translateX(-100px);
  }
  100% {
    opacity: 1;
    transform: none;
  }
}

@mixin section-in-left {
  @include prefix-animation(section-in-left 1s cubic-bezier(0.37, 0.01, 0.49, 1.21) forwards);
}

@mixin textbox-in-left {
  @include prefix-animation(text-in-left 2s cubic-bezier(0.42, 0, 0.06, 1.03) forwards);
}

@mixin text-in-left($timing, $curve) {
  @include prefix-animation(text-in-left $timing $curve forwards);
}



